__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/Users/gopiy/Documents/Wafi/src/screens/Auth/Forgotpassword.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _reactNativeLinearGradient = _require(_dependencyMap[3], "react-native-linear-gradient");

    var _reactNativeLinearGradient2 = _interopRequireDefault(_reactNativeLinearGradient);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        AuthScreenRegister: {
            displayName: "AuthScreenRegister"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/Users/gopiy/Documents/Wafi/src/screens/Auth/Forgotpassword.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var AuthScreenRegister = _wrapComponent("AuthScreenRegister")(function (_Component) {
        _inherits(AuthScreenRegister, _Component);

        function AuthScreenRegister() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, AuthScreenRegister);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AuthScreenRegister.__proto__ || Object.getPrototypeOf(AuthScreenRegister)).call.apply(_ref, [this].concat(args))), _this), _this.handlePress = function () {
                _this.props.navigator.push({
                    screen: 'Wafi.AuthScreen',
                    navigatorStyle: {
                        navBarHidden: true
                    }
                });
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(AuthScreenRegister, [{
            key: "render",
            value: function render() {
                return _react3.default.createElement(
                    _reactNativeLinearGradient2.default,
                    {
                        colors: ['#621C6C', '#8E0076', '#B8007F'],
                        style: styles.linearGradient,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 18
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.KeyboardAvoidingView,
                        {
                            style: styles.container,
                            behavior: "padding",
                            enabled: true,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 19
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.View,
                            {
                                style: styles.container,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 20
                                }
                            },
                            _react3.default.createElement(_reactNative.TextInput, {
                                style: styles.inputBox,
                                underlineColorAndroid: "rgba(0,0,0,0)",
                                placeholderTextColor: "white",
                                placeholder: "Enter Your EMmail ID",
                                keyboardType: 'email-address',
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 22
                                }
                            }),
                            _react3.default.createElement(
                                _reactNative.TouchableOpacity,
                                {
                                    style: styles.buttonBlock,
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 25
                                    }
                                },
                                _react3.default.createElement(
                                    _reactNative.Text,
                                    {
                                        style: styles.buttonText,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 26
                                        }
                                    },
                                    "Submit"
                                )
                            )
                        )
                    )
                );
            }
        }]);

        return AuthScreenRegister;
    }(_react2.Component));

    var styles = _reactNative.StyleSheet.create({
        container: {
            alignItems: 'center',
            justifyContent: 'center',
            width: '100%',
            flexGrow: 1
        },
        linearGradient: {
            flex: 1,
            paddingLeft: 15,
            paddingRight: 15,
            borderRadius: 0
        },
        inputBox: {
            margin: 5,
            width: '90%',
            color: 'rgba(255,255,255,.8)',
            padding: 10,
            borderRadius: 3,
            borderWidth: 2,
            borderColor: '#ffffff',
            fontSize: 16,
            fontFamily: "MyriadPro-Regular"
        },
        buttonBlock: {
            backgroundColor: '#ffffff',
            borderRadius: 5,
            padding: 10,
            color: 'rgba(0,0,0,1)',
            width: '90%',
            textAlign: 'center',
            margin: 5
        },
        buttonText: {
            color: '#000000',
            fontSize: 16,
            textAlign: 'center',
            padding: 5,
            fontFamily: "MyriadPro-Regular"
        },
        singUpTextBlk: {
            flexDirection: 'row',
            justifyContent: 'center',
            flex: 1,
            width: '90%',
            alignItems: 'center'
        },
        singUpText: {
            color: '#fff',
            fontSize: 15,
            paddingHorizontal: 10,
            paddingVertical: 5,
            fontFamily: "MyriadPro-Regular"
        },
        singUpTextBold: {
            color: '#fff',
            fontSize: 15,
            paddingHorizontal: 10,
            paddingVertical: 5,
            fontWeight: 'bold',
            fontFamily: "MyriadPro-Regular"
        }
    });

    exports.default = AuthScreenRegister;
});